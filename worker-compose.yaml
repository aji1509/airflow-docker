version: '3'

services:
  # Worker that listens to the default queue and worker1 queue
  airflow-worker1:
    build:
      context: .
      dockerfile: worker.dockerfile
    restart: always
    container_name: airflow-worker1
    environment:
      AIRFLOW__CORE__HOSTNAME_CALLABLE: 'airflow.utils.net.get_host_ip_address'
      # Specify which queues this worker should process
      AIRFLOW__CELERY__DEFAULT_QUEUE: 'default'
      AIRFLOW__CELERY__WORKER_CONCURRENCY: 4
      AIRFLOW_CONN_METADATA_DB: 'postgres://airflow:airflow@172.29.25.15:5433/airflow'
      # Listen to default and worker1 queues
      AIRFLOW__CELERY__CELERY_QUEUES: 'default,worker1'
    volumes:
      - ./dags:/opt/airflow/dags
      - ./plugins:/opt/airflow/plugins
      - ./logs:/opt/airflow/logs
      - ./scripts:/opt/airflow/scripts
    command: celery worker -q default,worker1
    healthcheck:
      test:
        - "CMD-SHELL"
        - 'celery --app airflow.executors.celery_executor.app inspect ping -d "celery@$${HOSTNAME}"'
      interval: 30s
      timeout: 30s
      retries: 10

  # Worker that listens to the default queue and worker2 queue
  airflow-worker2:
    build:
      context: .
      dockerfile: worker.dockerfile
    restart: always
    container_name: airflow-worker2
    environment:
      AIRFLOW__CORE__HOSTNAME_CALLABLE: 'airflow.utils.net.get_host_ip_address'
      # Specify which queues this worker should process
      AIRFLOW__CELERY__DEFAULT_QUEUE: 'default'
      AIRFLOW__CELERY__WORKER_CONCURRENCY: 4
      AIRFLOW_CONN_METADATA_DB: 'postgres://airflow:airflow@172.29.25.15:5433/airflow'
      # Listen to default and worker2 queues
      AIRFLOW__CELERY__CELERY_QUEUES: 'default,worker2'
    volumes:
      - ./dags:/opt/airflow/dags
      - ./plugins:/opt/airflow/plugins
      - ./logs:/opt/airflow/logs
      - ./scripts:/opt/airflow/scripts
    command: celery worker -q default,worker2
    healthcheck:
      test:
        - "CMD-SHELL"
        - 'celery --app airflow.executors.celery_executor.app inspect ping -d "celery@$${HOSTNAME}"'
      interval: 30s
      timeout: 30s
      retries: 10 